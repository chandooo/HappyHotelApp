# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Build
on:  
  push:
  pull_request:
    branches:
      - main
  workflow_dispatch:
  
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      # - name: Setup GCP Service Account
      #   uses: "google-github-actions/auth@v0"
      #   with:
      #     credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"

      # - name: "Use gcloud CLI"
      #   run: "gcloud info"

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
          cache: Maven

      #  - name: Cache SonarCloud packages
      #   uses: actions/cache@v1
      #    with:
      #      path: ~/.sonar/cache
      #     key: ${{ runner.os }}-sonar
      #      restore-keys: ${{ runner.os }}-sonar

      # - name: Cache Maven packages
      #   uses: actions/cache@v1
      #  with:
      #     path: ~/.m2
      #     key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
      #     restore-keys: ${{ runner.os }}-m2
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT";echo "$GITHUB_SHA"
        

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
      #    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #  run: mvn -e -B clean compile test package --file HappyHotelApp/pom.xml org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=triangulum-ctv-per -Dsonar.junit.reportPaths=target/surefire-reports -Dsonar.surefire.reportsPath=target/surefire-reports
        run: mvn -e -B clean compile test package --file pom.xml 
         
      - name: Deploy
        run: mvn -e deploy --file HappyHotelApp/pom.xml
      # - name: Push Artifacts to Google Artifact Repo
      #   run: mvn --file HappyHotelApp/pom.xml deploy
